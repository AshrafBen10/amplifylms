type AssignmentModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  content: String
  S3Key: String
  courseID: ID! @index(name: "byCourse")
  uploadedBy: String
  uploadedAt: String
  course: Course @belongsTo(fields: ["courseID"])
}

type SyllabusModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  S3Key: String
  courseID: ID! @index(name: "byCourse")
  uploadedBy: String
  uploadedAt: String
  course: Course @belongsTo(fields: ["courseID"])
}

enum CourseStatus {
  PUBLISHED
  DRAFT
}

type CommentModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  comment: String
  createdBy: String
  createdAt: String
  postmodelID: ID! @index(name: "byPostModel")
  User: User @belongsTo
  post: PostModel @belongsTo(fields: ["postmodelID"])
}

type PostModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  createdBy: String
  createdAt: String
  CommentModels: [CommentModel] @hasMany(indexName: "byPostModel", fields: ["id"])
  courseID: ID! @index(name: "byCourse")
  User: User @belongsTo
  course: Course @belongsTo(fields: ["courseID"])
}

type AnnouncementsModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  content: String
  createdAt: String
  courseID: ID! @index(name: "byCourse")
  User: User @belongsTo
  course: Course @belongsTo(fields: ["courseID"])
}

type Lesson @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  summary: String
  videoURL: String
  courseID: ID! @index(name: "byCourse")
  createdBy: String
  course: Course @belongsTo(fields: ["courseID"])
}

type Course @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  desc: String
  introduction: String
  createdBy: String
  Lessons: [Lesson] @hasMany(indexName: "byCourse", fields: ["id"])
  AnnouncementsModels: [AnnouncementsModel] @hasMany(indexName: "byCourse", fields: ["id"])
  createdAt: String
  User: User @belongsTo
  status: CourseStatus
  PostModels: [PostModel] @hasMany(indexName: "byCourse", fields: ["id"])
  SyllabusModels: [SyllabusModel] @hasMany(indexName: "byCourse", fields: ["id"])
  AssignmentModels: [AssignmentModel] @hasMany(indexName: "byCourse", fields: ["id"])
  enrolledStudents: [String]
  CourseUsers: [CourseUser] @hasMany(indexName: "byCourse", fields: ["id"])
  coursePin: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: String
  username: String
  isEducator: Boolean
  courses: [CourseUser] @hasMany(indexName: "byUser", fields: ["id"])
}

type CourseUser @model(queries: null) @auth(rules: [{allow: public}, {allow: public}]) {
  id: ID!
  courseID: ID! @index(name: "byCourse", sortKeyFields: ["userID"])
  userID: ID! @index(name: "byUser", sortKeyFields: ["courseID"])
  course: Course! @belongsTo(fields: ["courseID"])
  user: User! @belongsTo(fields: ["userID"])
}
